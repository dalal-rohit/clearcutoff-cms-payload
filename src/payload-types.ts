/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    courses: Course;
    pages: Page;
    questions: Question;
    'e-navigation': ENavigation;
    'e-stage': EStage;
    'e-sections': ESection;
    'e-instance': EInstance;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    courses: CoursesSelect<false> | CoursesSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    questions: QuestionsSelect<false> | QuestionsSelect<true>;
    'e-navigation': ENavigationSelect<false> | ENavigationSelect<true>;
    'e-stage': EStageSelect<false> | EStageSelect<true>;
    'e-sections': ESectionsSelect<false> | ESectionsSelect<true>;
    'e-instance': EInstanceSelect<false> | EInstanceSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    footers: Footer;
    faqs: Faq;
    reviews: Review;
    'global-sections': GlobalSection;
  };
  globalsSelect: {
    footers: FootersSelect<false> | FootersSelect<true>;
    faqs: FaqsSelect<false> | FaqsSelect<true>;
    reviews: ReviewsSelect<false> | ReviewsSelect<true>;
    'global-sections': GlobalSectionsSelect<false> | GlobalSectionsSelect<true>;
  };
  locale: 'en' | 'hi';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courses".
 */
export interface Course {
  id: number;
  exam_id?: string | null;
  name?: string | null;
  short_name?: string | null;
  state?: string | null;
  conducting_body?: string | null;
  logo_url?: string | null;
  exam_type?: string | null;
  exam_frequency?: string | null;
  evaluation_type?: string | null;
  upcoming_exam?: string | null;
  status: string;
  rating?: string | null;
  price?: string | null;
  combo_price?: string | null;
  marking_schema?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  slug?: string | null;
  seo_title?: string | null;
  seo_description?: string | null;
  hero?: {
    enabled?: boolean | null;
    heading?: string | null;
    color?: string | null;
  };
  course_hero?: {
    enabled?: boolean | null;
    heading?: string | null;
    color?: string | null;
  };
  logoCarousel?: {
    enabled?: boolean | null;
    heading?: string | null;
    color?: string | null;
  };
  features?: {
    enabled?: boolean | null;
    heading?: string | null;
    color?: string | null;
  };
  how_it_works?: {
    enabled?: boolean | null;
    heading?: string | null;
    color?: string | null;
  };
  comparison_table?: {
    enabled?: boolean | null;
    heading?: string | null;
    color?: string | null;
  };
  reviews?: {
    enabled?: boolean | null;
    heading?: string | null;
    color?: string | null;
  };
  faqs?: {
    enabled?: boolean | null;
    heading?: string | null;
    color?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "questions".
 */
export interface Question {
  id: number;
  question_id?: string | null;
  exam_instance_id?: string | null;
  stage_id?: string | null;
  label_id?: string | null;
  section_id?: string | null;
  question_number?: string | null;
  language_code?: string | null;
  question_text?: string | null;
  question_image_url?: string | null;
  option_1_text?: string | null;
  option_1_image_url?: string | null;
  option_2_text?: string | null;
  option_2_image_url?: string | null;
  option_3_text?: string | null;
  option_3_image_url?: string | null;
  option_4_text?: string | null;
  option_4_image_url?: string | null;
  correct_option?: string | null;
  official_answer_key?: string | null;
  explanation?: string | null;
  chapter_id?: string | null;
  topic_id?: string | null;
  subtopic_id?: string | null;
  ai_time_to_solve?: string | null;
  ai_difficulty_level?: string | null;
  ai_question_type?: string | null;
  ai_chapter_name?: string | null;
  ai_topic_name?: string | null;
  ai_subtopic_name?: string | null;
  ai_cognitive_skill?: string | null;
  ai_is_pedagogy?: string | null;
  ai_is_not?: string | null;
  ai_question_tags?: string | null;
  gs_created_at?: string | null;
  gs_updated_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "e-navigation".
 */
export interface ENavigation {
  id: number;
  ent_id?: string | null;
  exam_id?: string | null;
  parent_id?: string | null;
  name?: string | null;
  group?: string | null;
  status?: string | null;
  flag_course?: string | null;
  flag_tests?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "e-stage".
 */
export interface EStage {
  id: number;
  stage_id?: string | null;
  exam_id?: string | null;
  name?: string | null;
  stage_type?: string | null;
  stage_order?: string | null;
  description?: string | null;
  duration_mins?: string | null;
  total_marks?: string | null;
  total_questions?: string | null;
  ai_evaluation_supported?: string | null;
  status?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "e-sections".
 */
export interface ESection {
  id: number;
  section_id?: string | null;
  name?: string | null;
  type?: string | null;
  area?: string | null;
  description?: string | null;
  total_questions?: string | null;
  total_marks?: string | null;
  question_weightage?: string | null;
  evaluation_type?: string | null;
  ai_evaluation_supported?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "e-instance".
 */
export interface EInstance {
  id: number;
  exam_instance_id: string;
  exam_id: string;
  exam_year?: string | null;
  exam_cycle?: string | null;
  mode?: string | null;
  exam_pattern?: string | null;
  duration_minutes?: string | null;
  total_marks?: string | null;
  total_questions?: string | null;
  pass_criteria?: string | null;
  pass_marks?: string | null;
  negative_marking?: string | null;
  marking_scheme?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'courses';
        value: number | Course;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'questions';
        value: number | Question;
      } | null)
    | ({
        relationTo: 'e-navigation';
        value: number | ENavigation;
      } | null)
    | ({
        relationTo: 'e-stage';
        value: number | EStage;
      } | null)
    | ({
        relationTo: 'e-sections';
        value: number | ESection;
      } | null)
    | ({
        relationTo: 'e-instance';
        value: number | EInstance;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courses_select".
 */
export interface CoursesSelect<T extends boolean = true> {
  exam_id?: T;
  name?: T;
  short_name?: T;
  state?: T;
  conducting_body?: T;
  logo_url?: T;
  exam_type?: T;
  exam_frequency?: T;
  evaluation_type?: T;
  upcoming_exam?: T;
  status?: T;
  rating?: T;
  price?: T;
  combo_price?: T;
  marking_schema?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  seo_title?: T;
  seo_description?: T;
  hero?:
    | T
    | {
        enabled?: T;
        heading?: T;
        color?: T;
      };
  course_hero?:
    | T
    | {
        enabled?: T;
        heading?: T;
        color?: T;
      };
  logoCarousel?:
    | T
    | {
        enabled?: T;
        heading?: T;
        color?: T;
      };
  features?:
    | T
    | {
        enabled?: T;
        heading?: T;
        color?: T;
      };
  how_it_works?:
    | T
    | {
        enabled?: T;
        heading?: T;
        color?: T;
      };
  comparison_table?:
    | T
    | {
        enabled?: T;
        heading?: T;
        color?: T;
      };
  reviews?:
    | T
    | {
        enabled?: T;
        heading?: T;
        color?: T;
      };
  faqs?:
    | T
    | {
        enabled?: T;
        heading?: T;
        color?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "questions_select".
 */
export interface QuestionsSelect<T extends boolean = true> {
  question_id?: T;
  exam_instance_id?: T;
  stage_id?: T;
  label_id?: T;
  section_id?: T;
  question_number?: T;
  language_code?: T;
  question_text?: T;
  question_image_url?: T;
  option_1_text?: T;
  option_1_image_url?: T;
  option_2_text?: T;
  option_2_image_url?: T;
  option_3_text?: T;
  option_3_image_url?: T;
  option_4_text?: T;
  option_4_image_url?: T;
  correct_option?: T;
  official_answer_key?: T;
  explanation?: T;
  chapter_id?: T;
  topic_id?: T;
  subtopic_id?: T;
  ai_time_to_solve?: T;
  ai_difficulty_level?: T;
  ai_question_type?: T;
  ai_chapter_name?: T;
  ai_topic_name?: T;
  ai_subtopic_name?: T;
  ai_cognitive_skill?: T;
  ai_is_pedagogy?: T;
  ai_is_not?: T;
  ai_question_tags?: T;
  gs_created_at?: T;
  gs_updated_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "e-navigation_select".
 */
export interface ENavigationSelect<T extends boolean = true> {
  ent_id?: T;
  exam_id?: T;
  parent_id?: T;
  name?: T;
  group?: T;
  status?: T;
  flag_course?: T;
  flag_tests?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "e-stage_select".
 */
export interface EStageSelect<T extends boolean = true> {
  stage_id?: T;
  exam_id?: T;
  name?: T;
  stage_type?: T;
  stage_order?: T;
  description?: T;
  duration_mins?: T;
  total_marks?: T;
  total_questions?: T;
  ai_evaluation_supported?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "e-sections_select".
 */
export interface ESectionsSelect<T extends boolean = true> {
  section_id?: T;
  name?: T;
  type?: T;
  area?: T;
  description?: T;
  total_questions?: T;
  total_marks?: T;
  question_weightage?: T;
  evaluation_type?: T;
  ai_evaluation_supported?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "e-instance_select".
 */
export interface EInstanceSelect<T extends boolean = true> {
  exam_instance_id?: T;
  exam_id?: T;
  exam_year?: T;
  exam_cycle?: T;
  mode?: T;
  exam_pattern?: T;
  duration_minutes?: T;
  total_marks?: T;
  total_questions?: T;
  pass_criteria?: T;
  pass_marks?: T;
  negative_marking?: T;
  marking_scheme?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footers".
 */
export interface Footer {
  id: number;
  copyright: string;
  pages?:
    | {
        name: string;
        link: string;
        id?: string | null;
      }[]
    | null;
  socials?:
    | {
        link: string;
        icon?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  contacts?:
    | {
        contact: string;
        icon?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqs".
 */
export interface Faq {
  id: number;
  enabled?: boolean | null;
  eyebrow?: string | null;
  heading?: string | null;
  highlight?:
    | {
        text?: string | null;
        id?: string | null;
      }[]
    | null;
  subheading?: string | null;
  categories?:
    | {
        category?: string | null;
        id?: string | null;
      }[]
    | null;
  faqs?:
    | {
        category?: string | null;
        question?: string | null;
        answer?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
  id: number;
  enabled?: boolean | null;
  eyebrow?: string | null;
  heading?: string | null;
  highlight?:
    | {
        text?: string | null;
        id?: string | null;
      }[]
    | null;
  subheading?: string | null;
  reviews?:
    | {
        name?: string | null;
        profile?: (number | null) | Media;
        gender?: ('male' | 'female') | null;
        profession?: string | null;
        review?: string | null;
        reviewHighlight?:
          | {
              text?: string | null;
              id?: string | null;
            }[]
          | null;
        rating?: number | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "global-sections".
 */
export interface GlobalSection {
  id: number;
  hero?: {
    enabled?: boolean | null;
    eyebrow?: string | null;
    heading?: string | null;
    highlight?:
      | {
          text?: string | null;
          id?: string | null;
        }[]
      | null;
    subheading?: string | null;
    cta1_Text?: string | null;
    cta2_Text?: string | null;
    backgroundImage?: (number | null) | Media;
  };
  course_hero?: {
    course_hero_eyebrow?: string | null;
    course_hero_heading?: string | null;
    highlight?:
      | {
          text?: string | null;
          id?: string | null;
        }[]
      | null;
    course_hero_subheading?: string | null;
    course_hero_cta1_Text?: string | null;
    course_hero_cta2_Text?: string | null;
  };
  logoCarousel?: {
    enabled?: boolean | null;
    logos?:
      | {
          heading?: string | null;
          subheading?: string | null;
          logo?: (number | null) | Media;
          id?: string | null;
        }[]
      | null;
  };
  features?: {
    enabled?: boolean | null;
    eyebrow?: string | null;
    heading?: string | null;
    highlight?:
      | {
          text?: string | null;
          id?: string | null;
        }[]
      | null;
    subheading?: string | null;
    features?:
      | {
          heading?: string | null;
          description?: string | null;
          image?: (number | null) | Media;
          id?: string | null;
        }[]
      | null;
  };
  how_it_works?: {
    enabled?: boolean | null;
    eyebrow?: string | null;
    heading?: string | null;
    highlight?:
      | {
          text?: string | null;
          id?: string | null;
        }[]
      | null;
    subheading?: string | null;
    how_it_works?:
      | {
          heading?: string | null;
          subheading?: string | null;
          description?: string | null;
          btn_text?: string | null;
          image?: (number | null) | Media;
          id?: string | null;
        }[]
      | null;
  };
  comparison_table?: {
    enabled?: boolean | null;
    eyebrow?: string | null;
    heading?: string | null;
    highlight?:
      | {
          text?: string | null;
          id?: string | null;
        }[]
      | null;
    subheading?: string | null;
    comparison?:
      | {
          text?: string | null;
          id?: string | null;
        }[]
      | null;
    coaching_center?:
      | {
          text?: string | null;
          id?: string | null;
        }[]
      | null;
    clear_cutoff?:
      | {
          text?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footers_select".
 */
export interface FootersSelect<T extends boolean = true> {
  copyright?: T;
  pages?:
    | T
    | {
        name?: T;
        link?: T;
        id?: T;
      };
  socials?:
    | T
    | {
        link?: T;
        icon?: T;
        id?: T;
      };
  contacts?:
    | T
    | {
        contact?: T;
        icon?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqs_select".
 */
export interface FaqsSelect<T extends boolean = true> {
  enabled?: T;
  eyebrow?: T;
  heading?: T;
  highlight?:
    | T
    | {
        text?: T;
        id?: T;
      };
  subheading?: T;
  categories?:
    | T
    | {
        category?: T;
        id?: T;
      };
  faqs?:
    | T
    | {
        category?: T;
        question?: T;
        answer?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews_select".
 */
export interface ReviewsSelect<T extends boolean = true> {
  enabled?: T;
  eyebrow?: T;
  heading?: T;
  highlight?:
    | T
    | {
        text?: T;
        id?: T;
      };
  subheading?: T;
  reviews?:
    | T
    | {
        name?: T;
        profile?: T;
        gender?: T;
        profession?: T;
        review?: T;
        reviewHighlight?:
          | T
          | {
              text?: T;
              id?: T;
            };
        rating?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "global-sections_select".
 */
export interface GlobalSectionsSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        enabled?: T;
        eyebrow?: T;
        heading?: T;
        highlight?:
          | T
          | {
              text?: T;
              id?: T;
            };
        subheading?: T;
        cta1_Text?: T;
        cta2_Text?: T;
        backgroundImage?: T;
      };
  course_hero?:
    | T
    | {
        course_hero_eyebrow?: T;
        course_hero_heading?: T;
        highlight?:
          | T
          | {
              text?: T;
              id?: T;
            };
        course_hero_subheading?: T;
        course_hero_cta1_Text?: T;
        course_hero_cta2_Text?: T;
      };
  logoCarousel?:
    | T
    | {
        enabled?: T;
        logos?:
          | T
          | {
              heading?: T;
              subheading?: T;
              logo?: T;
              id?: T;
            };
      };
  features?:
    | T
    | {
        enabled?: T;
        eyebrow?: T;
        heading?: T;
        highlight?:
          | T
          | {
              text?: T;
              id?: T;
            };
        subheading?: T;
        features?:
          | T
          | {
              heading?: T;
              description?: T;
              image?: T;
              id?: T;
            };
      };
  how_it_works?:
    | T
    | {
        enabled?: T;
        eyebrow?: T;
        heading?: T;
        highlight?:
          | T
          | {
              text?: T;
              id?: T;
            };
        subheading?: T;
        how_it_works?:
          | T
          | {
              heading?: T;
              subheading?: T;
              description?: T;
              btn_text?: T;
              image?: T;
              id?: T;
            };
      };
  comparison_table?:
    | T
    | {
        enabled?: T;
        eyebrow?: T;
        heading?: T;
        highlight?:
          | T
          | {
              text?: T;
              id?: T;
            };
        subheading?: T;
        comparison?:
          | T
          | {
              text?: T;
              id?: T;
            };
        coaching_center?:
          | T
          | {
              text?: T;
              id?: T;
            };
        clear_cutoff?:
          | T
          | {
              text?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}